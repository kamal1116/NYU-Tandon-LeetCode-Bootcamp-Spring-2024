class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        # Create a set from the wordDict for faster lookup
        word_set = set(wordDict)
        
        # Initialize a boolean array dp to store whether s[:i] can be segmented
        dp = [False] * (len(s) + 1)
        dp[0] = True  # Empty string is always segmented
        
        # Iterate through each character in s
        for i in range(1, len(s) + 1):
            # Iterate through each possible partition point j
            for j in range(i):
                # Check if s[:j] can be segmented and if s[j:i] is in wordDict
                if dp[j] and s[j:i] in word_set:
                    dp[i] = True
                    break  # Break the inner loop if s[:i] can be segmented
        
        # Return whether s can be segmented
        return dp[len(s)]

        
