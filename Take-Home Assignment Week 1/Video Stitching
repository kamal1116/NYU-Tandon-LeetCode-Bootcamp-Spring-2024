class Solution:
    def videoStitching(self, clips: List[List[int]], time: int) -> int:
         # Sort the clips based on their start times
        clips.sort()

        # Initialize the dp array with maximum values
        dp = [float('inf')] * (time + 1)
        dp[0] = 0  # The base case is that it takes 0 clips to cover time 0

        for clip in clips:
            start, end = clip
            for t in range(start, min(end, time) + 1):
                dp[t] = min(dp[t], dp[start] + 1)

        return dp[time] if dp[time] != float('inf') else -1
